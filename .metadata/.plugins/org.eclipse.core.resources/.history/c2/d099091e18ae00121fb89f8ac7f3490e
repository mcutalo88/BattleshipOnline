import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.net.UnknownHostException;

/**
 * This will handle Player vs. Player Game Play.
 * 
 * 
 * @author Mike Cutalo
 */
public class PVP extends Turn{
	
	private final String SERVERNAME = "bill.kutztown.edu";
	private final int PORT = 15009;	
	private PrintWriter out;
	private BufferedReader in;
	
	private Player localPlayer;
	private Player remotePlayer;
	
	
	public PVP(){
		localPlayer = new Player();
		remotePlayer = new Player();
	}
	
	public void connetToServer() throws UnknownHostException, IOException, InterruptedException{
		
		Socket socket = new Socket(SERVERNAME, PORT);		
		System.out.println("Starting connection ...");
		
		out = new PrintWriter(socket.getOutputStream(), true);
		in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
			
		//Thread.sleep(1000);
		//Thread.sleep(1000);
		
		//sendData();
		
		getData();		
		
		System.out.println("Closing Socket");
		socket.close();
	}
	
	public void sendData()
	{
		System.out.println("Sending Board data now...");
		
		for(int i=0; i < 10; i++)
		{
			for(int j=0; j < 10; j++)
			{
				if(this.localPlayer.getPlayerBoard().getBoard()[i][j].getOccupyingShip() == ' '){
					out.println(i+""+j+"E");
				}else{
					out.println(i+""+j+""+this.localPlayer.getPlayerBoard().getBoard()[i][j].getOccupyingShip());	
				}				
			}
		}
	}

	public void getData() throws InterruptedException{
		String inputData;
		while(true){
			try {
				inputData = in.readLine();
				
				if(inputData.equals(null)){
					System.out.println("Sleeping GetData");
					Thread.sleep(500);
				}else{
					System.out.println("Data from server:" + inputData);
					
					// this is where i should build the players board.
					// Going to create a new player and then wait for input over the wire
					// will send over 
					// none = no ship in spot
					// the rest will be ship initials, A,B,S,D,P
					// Now when a ship is hit i will send over AH (aircraft hit)
					// Need to loop through the players board but wait for input
					// or i could send the postion like 10A saying a row / col there is a Aircraft
					
					int row = Integer.parseInt(String.valueOf(inputData.charAt(0)));
					int col = Integer.parseInt(String.valueOf(inputData.charAt(1)));
					char what = inputData.charAt(3);
					
					if(what == 'A'){
						remotePlayer.getPlayerBoard().getBoard()[row][col].setOccupyingShip('A');
					}else if(what == 'B'){
						remotePlayer.getPlayerBoard().getBoard()[row][col].setOccupyingShip('B');
					}else if(what == 'S'){
						remotePlayer.getPlayerBoard().getBoard()[row][col].setOccupyingShip('S');
					}else if(what == 'D'){
						remotePlayer.getPlayerBoard().getBoard()[row][col].setOccupyingShip('D');
					}else if(what == 'P'){
						remotePlayer.getPlayerBoard().getBoard()[row][col].setOccupyingShip('P');
					}
					
					//
					
					
					//this.localPlayer.getPlayerBoard().getBorder()[][]					
				}
			} catch (IOException e) {
				e.printStackTrace();
			}
		}		
	}
	

	//Getters & Setters//
	public Player getLocalPlayer() {
		return localPlayer;
	}

	public void setLocalPlayer(Player localPlayer) {
		this.localPlayer = localPlayer;
	}

	public Player getRemotePlayer() {
		return remotePlayer;
	}

	public void setRemotePlayer(Player remotePlayer) {
		this.remotePlayer = remotePlayer;
	}
}