import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;

public class ClientServer{
	private ServerSocket server = null;
	private final int PORT = 15009;
	
	private Client playerOne;
	private Client playerTwo;
	
	public ClientServer(){
		server = null;
		this.playerOne = new Client();
		this.playerTwo = new Client();
	}
	
	public void StartListening() throws IOException, InterruptedException
	{
		server = new ServerSocket(PORT);
		
		while(true){
			//Client player;
			Socket playerSocket = server.accept();
			//player = new Client(playerSocket);
			//p = new Client(playerSocket);
			//Thread t = new Thread(player);
			//t.start();
			
			if(playerOne.client.isConnected() != true)
			{
				System.out.println("Established Connection PlayerOne");
				playerOne = new Client(playerSocket);
				playerOne.setName("playerOne");
				
				Thread t = new Thread(playerOne);
				t.start();
			}
			else if(playerOne.client.isConnected() == true)
			{
				System.out.println("Established Connection PlayerTwo");
				playerTwo = new Client(playerSocket);
				playerTwo.setName("playerTwo");
				
				Thread t = new Thread(playerTwo);
				t.start();
				
				//Bother players are connected so now sent them each other 
				playerOne.setClientTwo(playerTwo);
				playerTwo.setClientTwo(playerOne);
				
				break;
			}
			Thread.sleep(2500);
		}
	}
	

	public class Client implements Runnable{
		private String name ="";
		private Socket client;
		private Client clientTwo;

		Client(){
			this.client = new Socket();
		}

		Client(Socket client){
			this.client = client;
		}
		
		public void run(){
			String line;
			BufferedReader in = null;
			PrintWriter out = null;
			try {
				in = new BufferedReader(new InputStreamReader(client.getInputStream()));
				//out = new PrintWriter(client.getOutputStream(), true);
				out = new PrintWriter(clientTwo.client.getOutputStream(), true);
			
			} catch (IOException e1) {
				e1.printStackTrace();
			}
			
			while(true){	
				try{
					System.out.println("Setting Up Streams" + this.name);
					line = in.readLine();
										
					if(line.equals(null)){
						System.out.println("Sleep ....");
						Thread.sleep(500);
					}else{
						System.out.println("Something From user : " + line);
						out.println("from server" + line);
					}
					
				}catch(Exception e){
					System.out.println(e.getMessage());
				}
			}
		}
		
		public void finalize(){
			try {
				client.close();
				System.out.println("Server Closed" + this.name);
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		
		public Client getClientTwo() {
			return clientTwo;
		}

		public void setClientTwo(Client clientTwo) {
			this.clientTwo = clientTwo;
		}
		public String getName() {
			return name;
		}

		public void setName(String name) {
			this.name = name;
		}
	}

	
	public static void main(String[] args) throws IOException, InterruptedException 
	{
		ClientServer gameServer = new ClientServer();
		gameServer.StartListening();
	}
}